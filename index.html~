<!doctype html>
<html lang="de">
  <head>
    <meta charset="utf-8">
    <title>Zukunftstag 2016</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="stylesheet" href="css/reveal.min.css">
    <link rel="stylesheet" href="css/theme/default.css" id="theme">
    <link href="lightbox/css/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="lightbox/css/lightbox.css" rel="stylesheet" type="text/css" media="screen" />

    <!-- For syntax highlighting -->
    <link rel="stylesheet" href="lib/css/zenburn.css">
    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    <script src="lightbox/js/jquery-1.10.2.min.js"></script>
    <script src="lightbox/js/lightbox-2.6.min.js"></script>
    <script>
      document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
    </script>
    <!--[if lt IE 9]>
	<script src="lib/js/html5shiv.js"></script>
	<![endif]-->
    <style>
      body {
      background: #282828;
      }
      .reveal {
      background: transparent url("youtubePageSource-t.png");
      }
      span.red {
      color: #ff6666;
      }
      span.blue {
      color: #6666ff;
      }
      span.yellow {
      color: #eeee00;
      }
      span.orange {
      color: #ffaa33;
      }
      span.lila {
      color: #aa33ff;
      }
      span.green {
      color: #66ff66;
      }
      div.text {
      text-align: center;
      }
      .bild {
      height: 100px;
      border: 0px;
      }
      .em {
      color: #ffaa33;
      }
      .reg {
      color: white;
      }
    </style>
    <script>
      $(document).ready(function() {
      });
    </script>
  </head>

  <body>
    <div style="position: fixed; top: 5px;left:5px"><img src="images/boys-day-logo.png"></div>
    <div style="position: fixed; top: 5px;right:5px"><img src="images/girls-day-logo.png"></div>
    <div class="reveal">
      <div class="slides">

	<section><!-- Einführung -->
	  <section><!-- Einführung - Agenda -->
	    <h1>Zukunftstag 28.04.2016</h1>
	    <ul>
	      <li>HTML, die Sprache der Webseiten</li>
	      <li>CSS, ihr Make-Up</li>
	      <li>Javascript, ihr Motor</li>
	      <li>jQuery, coole Moves</li>
	      <li>Das Spiel</li>
	    </ul>
	  </section>
	</section>

	
	<section><!-- HTML -->
	  <section>
	    <h2>HTML</h2>
	    <h3>Die Sprache des Internets</h3>
	    <ul>	    
	      <li>Alle Seiten im Internet sind in HTML geschrieben.</li>
	      <li>HTML ist
		eine <span class="em">Auszeichnungssprache</span>.</li>
	      <li>Ein Text besteht aus verschiedenen Bestandteilen wie z.B.</li>
	      <ul>
		<li>Seitenkopf</li>
		<li>Seitenkörper, z.B. mit
		  <ul>
		    <li>Titel</li>
		    <li>Paragraph mit Text</li>
		    <li>Bild</li>
		  </ul>
		</li>
	      </ul>
	    </ul>
	  </section>
	  
	  <section>
	    <h3>Das HTML Grundgerüst</h3>
	    <div style="text-align: left;">
	      <span class="blue">&lt;!DOCTYPE html&gt;</span><br />
	      <span class="blue">&lt;html lang=de&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&lt;head&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;</span>
	      Hier kommt Admin-Kram hin: Seitentitel, Scripte, CSS
	      <span class="red">&lt;/title&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&lt;/head&gt;</span><br />
	      <span class="green">&nbsp;&nbsp;&lt;body&gt;</span><br />
	      &nbsp;&nbsp;&nbsp;&nbsp;
	      Hier kommt das Zeug hin was man später auf der Webseite sieht</br>
	      <span class="green">&nbsp;&nbsp;&lt;/body&gt;</span><br />
	    </div>
	  </section>
	  <section>
	    <h3>Das HTML für unser Spiel</h3>
	    <div style="font-size: 60%; text-align: left;">
	      <span class="blue">&lt;!DOCTYPE html&gt;</span><br />
	      <span class="blue">&lt;html lang=de&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&lt;head&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset="utf-8"&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;</span>Mein erstes sebstgeschriebenes Spiel<span class="red">&lt;/title&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src="jquery.min.js"&gt;</span>
	      &lt;!-- hier kommt Javascript und jQuery hin --&gt;
	      <span class="red">&lt;/script&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;style&gt;</span>
	      &lt;!-- hier kommt CSS hin --&gt;
	      <span class="red">&lt;/style&gt;</span><br />
	      <span class="red">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/head&gt;</span><br />
	      <span class="green">&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;</span><br />
	      <span class="green">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img id="vader" src="</span>vader.png<span class="green">"&gt;</span><br />
	      <span class="green">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;</span><br />
	      <span class="red">&lt;/html&gt;</span>
	    </div>
	  </section>
	  
	  <section>
	    <h3>Ein paar Tags zum Rumspielen</h3>
	    <div style="text-align:left">
	      <span class="orange">&lt;p&gt;</span>
	      Eigener TextText für den Abschnitt (Paragraphen)
	      <span class="orange">&lt;p&gt;</span><br >
	      <span class="orange">&lt;ul&gt;</span><br />
	      &nbsp;&nbsp;<span class="orange">&lt;li&gt;</span>Listenelement 1<br />
	      &nbsp;&nbsp;<span class="orange">&lt;li&gt;</span>Listenelement 2<br />
	      &nbsp;&nbsp;<span class="orange">&lt;/ul&gt;</span><br />
	      <span class="orange">&lt;img src="</span>bildname.jpg<span class="orange">"&gt;</span><br />
	    </div>
	  </section>
	</section><!-- HTML -->
	
	
	<section><!-- CSS -->
	  <section>
	    <h1>CSS</h1>
	    <h3>Das Make-Up des Internets</h3>
	    <p>HTML ist nur eine Auszeichnungssprache, das heißt es erzählt dem
	      Browser nur "das ist eine Überschrift", und "das ist ein Text". Aber es sagt nicht wie diese Elemente auszusehen haben.</p>
	    <p>Diesen Part übernimmt CSS.</p>
	  </section>
	  <section data-markdown>
	    ## Mit CSS kann man sich die HTML-Tags schnappen und ändern
	    z.B. den Hintergrund der Seite einfärben:
	    ```
	    body {
	      background-color: lightblue;
	    }
	    ```
	    Oder den Hintergrund des divs mit der id="vader"
	    ```
	    #vader {
	      background-color: red; 
	    }
	    ```
	  </section>
	  <section data-markdown>
	    <script type="text/template">
	      ### Wo schreibt man das CSS hin?
	      CSS kann zum Beispiel auf der Webseite stehen, eingeschlossen in die
	      &lt;style&gt;-Tags: 
	      ```
	      <style>
		body {
		  background-color: lightblue;
		}
		#vader {
  		  background-color: palegreen;
		}
	      </style>
	      ```
	    </script>
	  </section>
	  
	  <section data-markdown>
	    ### Etwas CSS zum rumspielen
	    ```
	    // Alle p-Tags
	    p {
	      background-color: red;
	      font-style: italic;
	      font-weight: bold;
	    }
	    // das p-Tag mit der ID "besonders" (&lt;p id="besonders"&gt;Besonderer Text&lt;/p&gt;)
	    #besonders {
	      font-size: 70%;
	      color: blue;
	    }
	    ```
	  </section>
	</section><!-- CSS -->
	
	<section><!-- JavaScript -->
	  <section>
	    <h1>JavaScript</h1>
	    <h3>Der Motor des Internets</h3>
	    <p>Mit JavaScript können sich die (Web)Seiten verändern während man sie
	      anschaut.</p>
	    
	    JavaScript schreibt man innerhalb des<br />
	    <span class="blue">&lt;script&gt;&lt;/script&gt;</span></br />
	    Tags.
	  </section>
	  
	  <section>
	    <h3>Funktionen einbinden</h3>
	    Meist benutzt man eine sogenannte <span class="em">Library</span>  -  eine Sammlung
	    von Funktionen in einer Datei. <br />
	    Wenn man diese Datei in die eigene Webseite einbindet kann man deren Funktionen nutzen.<br />
	  </section>
	  <section>
	    <h3>jQuery Einbinden</h3>
	    jQuery ist eine der populärsten JavaScript-Libraries.<br />
	    Nachdem man die jQuery-Datei aus dem Internet heruntergeladen hat
	    kann man sie im Header seiner Webseite einbinden.<br />
	    <span class="blue">&lt;script src="</span>jquery.min.js <span class="blue">"&gt;&lt;/script&gt;</span>
	  </section>
	  
	  <section id="bugsection" >
	    <style>
	      #bugimg {
              border: 0;
              background: rgba(0,0,0,0);
              margin: 0;
              width: 100px;
              box-shadow: none;
              position: absolute;
              top: 0;
              left: 0;
	      }
	    </style>
	    <script>
	      $(document).keyup(function(event) {
	      
              if (Reveal.getCurrentSlide().id == "bugsection") {
	      
              var bugInterval = setInterval (function() {
              $("#bugimg")
              .css("left", Math.random()*window.innerWidth/2)
              .css("top", Math.random()*window.innerHeight/2)
              .css("transform","rotate("+Math.random()*360+"deg)");
              }, 1000);
	      
              } else {
              clearInterval(bugInterval);
              }
	      
	      });
	    </script><img id="bugimg" src="images/bug-b.svg">
	    <h3>Das Wichtigste beim Programmieren</h3>
	    <p>
	      <span class="orange">Computer sind total pingelig!!!</span><br />
	      Leerzeichen an der falschen Stelle oder ein Groß- statt eines Kleinbuchstaben kann das Programm kaputt machen.
	    </p><p>
	      Ein guter Teil der Zeit beim Programmieren geht mit <span class="orange">Debugging</span> drauf.
	  </section>
	  
	  <section>
	    <h3>Debugging bei der Webprogrammierung</h3>
	    <p>Im Firefox-Menü unter "Entwicklerwerkzeuge" "Webkonsole" aufrufen.</p><p>
	      Dann erscheint ein Fenster unter der Webseite in der man mit der Webseite interagiern (sprechen) kann.
	  </section>

	  <section>
	    <h3>Das Handwerkzeugs von jQuery <br />(und den meisten anderen Sprachen)</h3>
	    <ul>
	      <li>Werte können in <span class="orange">Variablen</span> gespeichert und verändert werden
	      <li>Mit <span class="orange">Schleifen</span> können Aktionen mehrfach ausgeführt werden
	      <li>Es können <span class="orange">entweder/oder Abfragen</span> gemacht werden
	      <li>Es gibt <span class="orange">vordefinierte Funktionen</span>
	      <li>Mehrere verschiedene Aktionen können in <span class="orange">Funktionen</span> zusammengefasst werden
	    </ul>
	  </section>
	</section>

	<section>
	  <section>
	    <h1>Vordefinierte Funktionen</h1>
	    <h3>(zum Ausprobieren )</h3>
	    <div style="text-align:left">
	      <p><span class="orange">alert(</span>"Hallo Welt"<span class="orange">);</span></p>
	      <p>1<span class="orange">+</span>3;</p>
	    </div>
	  </section>

	  <section>
	    <h3>Variable (zum Ausprobieren)</h3>
	    <div style="text-align:left;">
	      <span class="orange">var</span> ergebnis <span class="orange">=</span> 3;<br />
	      <span class="orange">alert(</span>ergebnis<span class="orange">)</span>;<br />
	      ergebnis <span class="orange">=</span> 5;<br />
	      <span class="orange">alert(</span>ergebnis<span class="orange">)</span>;
	    </div>
	  </section>

	  <section>
	    <h3>Schleife (zum Ausprobieren)</h3>
	    <div style="text-align:left">
	      <span class="orange">for (</span>var i = 0; i < 3; i++<span class="orange">) {</span><br />
							      <span class="orange">&nbsp;&nbsp;alert(</span>"Hallo, ich mache alles mehrfach"<span class="orange">);</span><br />
							      <span class="orange">}</span>
	    </div>
	  </section>
	  <section>
	    <h3>Abfrage (zum Ausprobieren)</h3>
	    <div style="text-align:left">
	      <span class="orange">var</span> ergebnis = 1;<br />
	      <span class="orange">if (</span>ergebnis == 1<span class="orange">) {</span><br />
	      <span class="orange">&nbsp;&nbsp;alert(</span>"Stimmt!"<span class="orange">);</span><br />
	      <span class="orange">} else {</span><br />
	      <span class="orange">&nbsp;&nbsp;alert(</span>"Stimmt nicht!"<span class="orange">);</span><br />
	      <span class="orange">}</span>
	    </div>
	  </section>
	  
	  <section>
	    <h3>Funktion (zum Ausprobieren)</h3>
	    <div style="text-align:left">
	      <span class="green">var</span> sagsMir <span class="green">= function () {</span><br />
	      <span class="green">&nbsp;&nbsp;var</span> ergebnis <span class="green">=</span> 1<span class="green">+</span>3;<br />
	      <span class="green">&nbsp;&nbsp;alert(</span>"Ich sage"<span class="green">);</span><br />
	      <span class="green">&nbsp;&nbsp;alert(</span>ergebnis<span class="green">);</span><br />
	      <span class="green">}</span><br />
	      sagsMir();
	    </div>
	  </section>
	</section>

	<section><!-- jQuery -->
	  <section>
	    <h1>jQuery</h1>
	    <p>Stellt eine ganze Reihe nützlicher Funktionen zur Verfügung</p>
	    <p>Vor allem zum Verändern von Seitenelementen</p>
	  </section>

	  <section data-markdown>
	    ###Spezielle jQuery Funktionen
	    ```
	    $("p").css("background-color","blue");
	    $("p").html("hallo Leute");
	    $("p").append("
	    Und hier kommt noch mehr Text
	    ");
	    ```
	  </section>
	  
	  <section data-markdown>
	    ###Ausführen nachdem alle Elemente geladen sind
	    ```
	    $(document).ready(function() {
	    // Das hier wird getan nachdem die Seite geladen ist
	    });
	    ```
	  </section>
	</section>
	<section><!-- Das Spiel -->
	  <section>
	    <h1>Beschreibung des Spiels</h1>
	    <ul>
	      <li>Darth Vader erscheint irgendwo auf dem Bildschirm.
	      <li>Wenn er mit dem Lichtschwert in einer bestimmten Zeit geschlagen wird erscheint woanders wieder und das Spiel geht weiter
	      <li>Wenn es nicht rechtzeitig geschlagen wird, gewinnt er und wird riesig
	      <li><a href="../spiel/erstesSpiel.html">Zum Beispiel so:</a>
	    </ul>
	  </section>

	  <section>
	    <h1>Was brauchen wir? Die Basis</h1>
	    <ul>
	      <li>Das Bild von Darth Vader
	      <li>Das Bild vom Lichtschwert als Cursor
	      <li>Darth Vader an einer bestimmten Position
	    </ul>
	  </section>
	  

	  <section data-markdown>
	    ### Das Bild (mit HTML):
	    ```
	    &lt;img src="vader.png" id="vader">
		```
	  </section>

	  <section data-markdown>
	    ### Der Cursor, Hintergund und Schriftfarbe (mit CSS)
	    ```
	    body {
	    background-color: Midnightblue;
	    cursor: url("lightsaber.png"),auto;
	    color: white;
	    }
	    
	    ```
	  </section>

	  <section data-markdown>
	    ### Die Position von Vader mit jQuery setzen
	    ```
	    $("#vader").css({
	      "top":"100px", 
	      "left":"100px"
	    });
	    ```
	  </section>

	  <section data-markdown>
	    ### Halt! Es soll ja ein zufälliger Ort auf dem Bildschirm sein!
	    ```
	    x-Wert: Math.random()*window.innerWidth/2
	    y-Wert: Math.random()*window.innerHeight/2
	    ```
	  </section>
	  <section data-markdown>
	    ### und jetzt mit jQuery an zufälligen Ort setzen:
	    ```
	    $("#vader").css({
	      "left": Math.random()*window.innerWidth/2,
	      "top": Math.random()*window.innerHeight/2
	    });
	    ```
	  </section>
	</section>

	<section>
	  <section>
	    <h3>Vader nach einer bestimmten Zeit woanders hinsetzen</h3>
	    <pre>
	      <code class="bash">
		var spiele = function() {
		
		  // Vader versetzen
		  $("#vader").css({
		    "left": Math.random()*window.innerWidth/2,
		    "top": Math.random()*window.innerHeight/2
		  });
		  
		  // Funktion nach 1000 Millisekunden wieder aufrufen
		  setTimeout( function() {
		    spiele();
		  }, 1000);

		};
	      </code>
	    </pre>
	  </section>

	  <section>
	    <p>
	      Aber wir wollen Vader ja nur versetzen,
	      wenn wir weniger als 1 Sekunde gebraucht haben um ihn zu schlagen!
	    </p>
	    <p>
	      Also brauchen wir eine <span class="blue">Stopuhr</span>
	    </p>
	    <p>Die Stopuhr zählt runter.<br />
	      Wenn Vader angeklickt wird wird sie neu gestartet und Vader versetzt, 
	      ansonsten wird das Spiel beendet.
	    </p>
	  </section>

	  <section>
	    <pre>
	      <code>
		var stopuhr;
		var spiele = function() {
		  // Versetze Vader und starte Stopuhr neu
		}
		var beendeSpiel = function() {
		  // Beende das Spiel
		}
	      </code>
	    </pre>
	  </section>

	  <section>
	    <h3>Funktion zum Spielen</h3>
	    <pre>
	      <code>
		var stopuhr;

		var spiele = function() {

		  // Beende die alte Stopuhr (falls vorhanden)
		  clearTimeout( stopuhr );

		  // Versetze Vader
  		  $("#vader").css({
		    "left": Math.random()*window.innerWidth/2,
		    "top": Math.random()*window.innerHeight/2
		  });      
		  // Starte Stopuhr neu
		  stopuhr = setTimeout( function() { beendeSpiel }, 1000 );
		}
	      </code>
	    </pre>
	  </section>
	  
	  <section>
	    <h3>Funktion zum Beenden des Spiels</h3>
	    <pre>
	      <code>
		var beendeSpiel = function() {

		  // lasse Vader verschwinden
		  $("#vader").css({
		    "visibility": "hidden"
		  });

		  // schreibe Meldung
		  $("body").html("Du hast verloren!");
		}
	      </code>
	    </pre>
	  </section>

	  <section>
	    <h3>Spiel erst starten, wenn Vader das erste Mal angeklickt wird</h3>
	    <pre>
	      <code>
		$("#vader").click( function() {
		  spiele();
		});
	      </code>
	    </pre>
	  </section>

	  <section id="smiley">
	    <script>
	      $(document).keyup(function(event) {
                if (Reveal.getCurrentSlide().id == "smiley") {
	          setTimeout(function() {
	            $("#smileycon")
	              .animate({
	                "font-size":"8em"
	              }, "slow")
	          }, 500)
	        }
	      });
	    </script>
	    <h1>Viel Spaß beim Programmieren!</h1>
	    <h3>Sibylle Nägle</h3>
	    <h6 id="smileycon">:)</h6>

	  </section>
	</section>

	<style>
	  .moveRight {
	  position: absolute;
	  }
	</style>
	<script>
	  $("h1:contains('JavaScript')").hover(function() {
	  $(".moveRight").animate({ "marginLeft": "+500px"}, "slow");
	  });
	  $("h1:contains('JavaScript')").mouseleave(function() {
	  $(".moveRight").animate({ "marginLeft": "-500px"}, "slow");
	  });

	</script><!-- Javascript -->


	</div>
      </div>


      <script src="lib/js/head.min.js"></script>
      <script src="js/reveal.min.js"></script>

      <script>
	// Full list of configuration options available here:
	// https://github.com/hakimel/reveal.js#configuration
	Reveal.initialize({
	controls: true,
	progress: true,
	history: true,
	center: true,
	theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
	transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none
	// Parallax scrolling
	// parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
	// parallaxBackgroundSize: '2100px 900px',
	// Optional libraries used to extend on reveal.js
	dependencies: [
	{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
	{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
	{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
	{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
	{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
	{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
	]
	});
      </script>
  </body>
</html>
